<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">
    <!--  <bean id="user" class="com.wayhb.User">
    <property name="userid" value="20"></property>
    <property name="username" value="wayhb"></property>
    < /bean>-->
    <!--开启缓存注解-->
    <cache:annotation-driven />
    <!--开启注解方式，扫描包路径-->
    <context:annotation-config/>
    <context:component-scan base-package="cn.pomit.springwork.netty" />
    <!-- 传统方法配置BEAN
    <bean id="helloServer" class="com.netty.HelloServer" init-method="serverStart">
    <property name="helloServerInitializer" ref="helloServerInitializer"></property>
    </bean>
    <bean id="helloServerInitializer" class="com.netty.HelloServerInitializer">
    <property name="helloServerHandler" ref="helloServerHandler"></property>
    </bean>
    <bean id="helloServerHandler" class="com.netty.HelloServerHandler" scope="prototype"></bean>
     -->
    <!--引入所需的配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false" />
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000" />
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--mapper类所在的包-->
        <property name="basePackage" value="cn.pomit.springwork.netty.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--
    <bean class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="cn.pomit.springwork.netty.mapper.UserMapper"/>
    </bean>
    <-->
    <bean id="cacheManager" class="org.springframework.cache.guava.GuavaCacheManager">
        <property name="cacheSpecification" value="concurrencyLevel=4,expireAfterAccess=100s,expireAfterWrite=100s" />
        <property name="cacheNames">
            <list>
                <value>userCache</value>
            </list>
        </property>
    </bean>
</beans>